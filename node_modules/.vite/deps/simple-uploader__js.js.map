{
  "version": 3,
  "sources": ["../../simple-uploader.js/dist/uploader.js"],
  "sourcesContent": ["/*!\n * Uploader - Uploader library implements html5 file upload and provides multiple simultaneous, stable, fault tolerant and resumable uploads\n * @version v0.6.0\n * @author dolymood <dolymood@gmail.com>\n * @link https://github.com/simple-uploader/Uploader\n * @license MIT\n */\n!function(e){if(\"object\"==typeof exports)module.exports=e();else if(\"function\"==typeof define&&define.amd)define(e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.Uploader=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\nvar utils = _dereq_('./utils')\n\nfunction Chunk (uploader, file, offset) {\n  utils.defineNonEnumerable(this, 'uploader', uploader)\n  utils.defineNonEnumerable(this, 'file', file)\n  utils.defineNonEnumerable(this, 'bytes', null)\n  this.offset = offset\n  this.tested = false\n  this.retries = 0\n  this.pendingRetry = false\n  this.preprocessState = 0\n  this.readState = 0\n  this.loaded = 0\n  this.total = 0\n  this.chunkSize = utils.evalOpts(uploader.opts.chunkSize, file, this)\n  this.startByte = this.offset * this.chunkSize\n  this.endByte = this.computeEndByte()\n  this.xhr = null\n}\n\nvar STATUS = Chunk.STATUS = {\n  PENDING: 'pending',\n  UPLOADING: 'uploading',\n  READING: 'reading',\n  SUCCESS: 'success',\n  ERROR: 'error',\n  COMPLETE: 'complete',\n  PROGRESS: 'progress',\n  RETRY: 'retry'\n}\n\nutils.extend(Chunk.prototype, {\n\n  _event: function (evt, args) {\n    args = utils.toArray(arguments)\n    args.unshift(this)\n    this.file._chunkEvent.apply(this.file, args)\n  },\n\n  computeEndByte: function () {\n    var endByte = Math.min(this.file.size, (this.offset + 1) * this.chunkSize)\n    if (this.file.size - endByte < this.chunkSize && !this.uploader.opts.forceChunkSize) {\n      // The last chunk will be bigger than the chunk size,\n      // but less than 2 * this.chunkSize\n      endByte = this.file.size\n    }\n    return endByte\n  },\n\n  getParams: function () {\n    return {\n      chunkNumber: this.offset + 1,\n      chunkSize: this.chunkSize,\n      currentChunkSize: this.endByte - this.startByte,\n      totalSize: this.file.size,\n      identifier: this.file.uniqueIdentifier,\n      filename: this.file.name,\n      relativePath: this.file.relativePath,\n      totalChunks: this.file.chunks.length\n    }\n  },\n\n  getTarget: function (target, params) {\n    if (!params.length) {\n      return target\n    }\n    if (target.indexOf('?') < 0) {\n      target += '?'\n    } else {\n      target += '&'\n    }\n    return target + params.join('&')\n  },\n\n  test: function () {\n    this.xhr = new XMLHttpRequest()\n    this.xhr.addEventListener('load', testHandler, false)\n    this.xhr.addEventListener('error', testHandler, false)\n    var testMethod = utils.evalOpts(this.uploader.opts.testMethod, this.file, this)\n    var data = this.prepareXhrRequest(testMethod, true)\n    this.xhr.send(data)\n\n    var $ = this\n    function testHandler (event) {\n      var status = $.status(true)\n      if (status === STATUS.ERROR) {\n        $._event(status, $.message())\n        $.uploader.uploadNextChunk()\n      } else if (status === STATUS.SUCCESS) {\n        $._event(status, $.message())\n        $.tested = true\n      } else if (!$.file.paused) {\n        // Error might be caused by file pause method\n        // Chunks does not exist on the server side\n        $.tested = true\n        $.send()\n      }\n    }\n  },\n\n  preprocessFinished: function () {\n    // Compute the endByte after the preprocess function to allow an\n    // implementer of preprocess to set the fileObj size\n    this.endByte = this.computeEndByte()\n    this.preprocessState = 2\n    this.send()\n  },\n\n  readFinished: function (bytes) {\n    this.readState = 2\n    this.bytes = bytes\n    this.send()\n  },\n\n  send: function () {\n    var preprocess = this.uploader.opts.preprocess\n    var read = this.uploader.opts.readFileFn\n    if (utils.isFunction(preprocess)) {\n      switch (this.preprocessState) {\n        case 0:\n          this.preprocessState = 1\n          preprocess(this)\n          return\n        case 1:\n          return\n      }\n    }\n    switch (this.readState) {\n      case 0:\n        this.readState = 1\n        read(this.file, this.file.fileType, this.startByte, this.endByte, this)\n        return\n      case 1:\n        return\n    }\n    if (this.uploader.opts.testChunks && !this.tested) {\n      this.test()\n      return\n    }\n\n    this.loaded = 0\n    this.total = 0\n    this.pendingRetry = false\n\n    // Set up request and listen for event\n    this.xhr = new XMLHttpRequest()\n    this.xhr.upload.addEventListener('progress', progressHandler, false)\n    this.xhr.addEventListener('load', doneHandler, false)\n    this.xhr.addEventListener('error', doneHandler, false)\n\n    var uploadMethod = utils.evalOpts(this.uploader.opts.uploadMethod, this.file, this)\n    var data = this.prepareXhrRequest(uploadMethod, false, this.uploader.opts.method, this.bytes)\n    this.xhr.send(data)\n\n    var $ = this\n    function progressHandler (event) {\n      if (event.lengthComputable) {\n        $.loaded = event.loaded\n        $.total = event.total\n      }\n      $._event(STATUS.PROGRESS, event)\n    }\n\n    function doneHandler (event) {\n      var msg = $.message()\n      $.processingResponse = true\n      $.uploader.opts.processResponse(msg, function (err, res) {\n        $.processingResponse = false\n        if (!$.xhr) {\n          return\n        }\n        $.processedState = {\n          err: err,\n          res: res\n        }\n        var status = $.status()\n        if (status === STATUS.SUCCESS || status === STATUS.ERROR) {\n          // delete this.data\n          $._event(status, res)\n          status === STATUS.ERROR && $.uploader.uploadNextChunk()\n        } else {\n          $._event(STATUS.RETRY, res)\n          $.pendingRetry = true\n          $.abort()\n          $.retries++\n          var retryInterval = $.uploader.opts.chunkRetryInterval\n          if (retryInterval !== null) {\n            setTimeout(function () {\n              $.send()\n            }, retryInterval)\n          } else {\n            $.send()\n          }\n        }\n      }, $.file, $)\n    }\n  },\n\n  abort: function () {\n    var xhr = this.xhr\n    this.xhr = null\n    this.processingResponse = false\n    this.processedState = null\n    if (xhr) {\n      xhr.abort()\n    }\n  },\n\n  status: function (isTest) {\n    if (this.readState === 1) {\n      return STATUS.READING\n    } else if (this.pendingRetry || this.preprocessState === 1) {\n      // if pending retry then that's effectively the same as actively uploading,\n      // there might just be a slight delay before the retry starts\n      return STATUS.UPLOADING\n    } else if (!this.xhr) {\n      return STATUS.PENDING\n    } else if (this.xhr.readyState < 4 || this.processingResponse) {\n      // Status is really 'OPENED', 'HEADERS_RECEIVED'\n      // or 'LOADING' - meaning that stuff is happening\n      return STATUS.UPLOADING\n    } else {\n      var _status\n      if (this.uploader.opts.successStatuses.indexOf(this.xhr.status) > -1) {\n        // HTTP 200, perfect\n        // HTTP 202 Accepted - The request has been accepted for processing, but the processing has not been completed.\n        _status = STATUS.SUCCESS\n      } else if (this.uploader.opts.permanentErrors.indexOf(this.xhr.status) > -1 ||\n          !isTest && this.retries >= this.uploader.opts.maxChunkRetries) {\n        // HTTP 415/500/501, permanent error\n        _status = STATUS.ERROR\n      } else {\n        // this should never happen, but we'll reset and queue a retry\n        // a likely case for this would be 503 service unavailable\n        this.abort()\n        _status = STATUS.PENDING\n      }\n      var processedState = this.processedState\n      if (processedState && processedState.err) {\n        _status = STATUS.ERROR\n      }\n      return _status\n    }\n  },\n\n  message: function () {\n    return this.xhr ? this.xhr.responseText : ''\n  },\n\n  progress: function () {\n    if (this.pendingRetry) {\n      return 0\n    }\n    var s = this.status()\n    if (s === STATUS.SUCCESS || s === STATUS.ERROR) {\n      return 1\n    } else if (s === STATUS.PENDING) {\n      return 0\n    } else {\n      return this.total > 0 ? this.loaded / this.total : 0\n    }\n  },\n\n  sizeUploaded: function () {\n    var size = this.endByte - this.startByte\n    // can't return only chunk.loaded value, because it is bigger than chunk size\n    if (this.status() !== STATUS.SUCCESS) {\n      size = this.progress() * size\n    }\n    return size\n  },\n\n  prepareXhrRequest: function (method, isTest, paramsMethod, blob) {\n    // Add data from the query options\n    var query = utils.evalOpts(this.uploader.opts.query, this.file, this, isTest)\n    query = utils.extend(this.getParams(), query)\n\n    // processParams\n    query = this.uploader.opts.processParams(query, this.file, this, isTest)\n\n    var target = utils.evalOpts(this.uploader.opts.target, this.file, this, isTest)\n    var data = null\n    if (method === 'GET' || paramsMethod === 'octet') {\n      // Add data from the query options\n      var params = []\n      utils.each(query, function (v, k) {\n        params.push([encodeURIComponent(k), encodeURIComponent(v)].join('='))\n      })\n      target = this.getTarget(target, params)\n      data = blob || null\n    } else {\n      // Add data from the query options\n      data = new FormData()\n      utils.each(query, function (v, k) {\n        data.append(k, v)\n      })\n      if (typeof blob !== 'undefined') {\n        data.append(this.uploader.opts.fileParameterName, blob, this.file.name)\n      }\n    }\n\n    this.xhr.open(method, target, true)\n    this.xhr.withCredentials = this.uploader.opts.withCredentials\n\n    // Add data from header options\n    utils.each(utils.evalOpts(this.uploader.opts.headers, this.file, this, isTest), function (v, k) {\n      this.xhr.setRequestHeader(k, v)\n    }, this)\n\n    return data\n  }\n\n})\n\nmodule.exports = Chunk\n\n},{\"./utils\":5}],2:[function(_dereq_,module,exports){\nvar each = _dereq_('./utils').each\n\nvar event = {\n\n  _eventData: null,\n\n  on: function (name, func) {\n    if (!this._eventData) this._eventData = {}\n    if (!this._eventData[name]) this._eventData[name] = []\n    var listened = false\n    each(this._eventData[name], function (fuc) {\n      if (fuc === func) {\n        listened = true\n        return false\n      }\n    })\n    if (!listened) {\n      this._eventData[name].push(func)\n    }\n  },\n\n  off: function (name, func) {\n    if (!this._eventData) this._eventData = {}\n    if (!this._eventData[name] || !this._eventData[name].length) return\n    if (func) {\n      each(this._eventData[name], function (fuc, i) {\n        if (fuc === func) {\n          this._eventData[name].splice(i, 1)\n          return false\n        }\n      }, this)\n    } else {\n      this._eventData[name] = []\n    }\n  },\n\n  trigger: function (name) {\n    if (!this._eventData) this._eventData = {}\n    if (!this._eventData[name]) return true\n    var args = this._eventData[name].slice.call(arguments, 1)\n    var preventDefault = false\n    each(this._eventData[name], function (fuc) {\n      preventDefault = fuc.apply(this, args) === false || preventDefault\n    }, this)\n    return !preventDefault\n  }\n}\n\nmodule.exports = event\n\n},{\"./utils\":5}],3:[function(_dereq_,module,exports){\nvar utils = _dereq_('./utils')\nvar event = _dereq_('./event')\nvar File = _dereq_('./file')\nvar Chunk = _dereq_('./chunk')\n\nvar version = '0.6.0'\n\nvar isServer = typeof window === 'undefined'\n\n// ie10+\nvar ie10plus = isServer ? false : window.navigator.msPointerEnabled\nvar support = (function () {\n  if (isServer) {\n    return false\n  }\n  var sliceName = 'slice'\n  var _support = utils.isDefined(window.File) && utils.isDefined(window.Blob) &&\n                utils.isDefined(window.FileList)\n  var bproto = null\n  if (_support) {\n    bproto = window.Blob.prototype\n    utils.each(['slice', 'webkitSlice', 'mozSlice'], function (n) {\n      if (bproto[n]) {\n        sliceName = n\n        return false\n      }\n    })\n    _support = !!bproto[sliceName]\n  }\n  if (_support) Uploader.sliceName = sliceName\n  bproto = null\n  return _support\n})()\n\nvar supportDirectory = (function () {\n  if (isServer) {\n    return false\n  }\n  var input = window.document.createElement('input')\n  input.type = 'file'\n  var sd = 'webkitdirectory' in input || 'directory' in input\n  input = null\n  return sd\n})()\n\nfunction Uploader (opts) {\n  this.support = support\n  /* istanbul ignore if */\n  if (!this.support) {\n    return\n  }\n  this.supportDirectory = supportDirectory\n  utils.defineNonEnumerable(this, 'filePaths', {})\n  this.opts = utils.extend({}, Uploader.defaults, opts || {})\n\n  this.preventEvent = utils.bind(this._preventEvent, this)\n\n  File.call(this, this)\n}\n\n/**\n * Default read function using the webAPI\n *\n * @function webAPIFileRead(fileObj, fileType, startByte, endByte, chunk)\n *\n */\nvar webAPIFileRead = function (fileObj, fileType, startByte, endByte, chunk) {\n  chunk.readFinished(fileObj.file[Uploader.sliceName](startByte, endByte, fileType))\n}\n\nUploader.version = version\n\nUploader.defaults = {\n  chunkSize: 1024 * 1024,\n  forceChunkSize: false,\n  simultaneousUploads: 3,\n  singleFile: false,\n  fileParameterName: 'file',\n  progressCallbacksInterval: 500,\n  speedSmoothingFactor: 0.1,\n  query: {},\n  headers: {},\n  withCredentials: false,\n  preprocess: null,\n  method: 'multipart',\n  testMethod: 'GET',\n  uploadMethod: 'POST',\n  prioritizeFirstAndLastChunk: false,\n  allowDuplicateUploads: false,\n  target: '/',\n  testChunks: true,\n  generateUniqueIdentifier: null,\n  maxChunkRetries: 0,\n  chunkRetryInterval: null,\n  permanentErrors: [404, 415, 500, 501],\n  successStatuses: [200, 201, 202],\n  onDropStopPropagation: false,\n  initFileFn: null,\n  readFileFn: webAPIFileRead,\n  checkChunkUploadedByResponse: null,\n  initialPaused: false,\n  processResponse: function (response, cb) {\n    cb(null, response)\n  },\n  processParams: function (params) {\n    return params\n  }\n}\n\nUploader.utils = utils\nUploader.event = event\nUploader.File = File\nUploader.Chunk = Chunk\n\n// inherit file\nUploader.prototype = utils.extend({}, File.prototype)\n// inherit event\nutils.extend(Uploader.prototype, event)\nutils.extend(Uploader.prototype, {\n\n  constructor: Uploader,\n\n  _trigger: function (name) {\n    var args = utils.toArray(arguments)\n    var preventDefault = !this.trigger.apply(this, arguments)\n    if (name !== 'catchAll') {\n      args.unshift('catchAll')\n      preventDefault = !this.trigger.apply(this, args) || preventDefault\n    }\n    return !preventDefault\n  },\n\n  _triggerAsync: function () {\n    var args = arguments\n    utils.nextTick(function () {\n      this._trigger.apply(this, args)\n    }, this)\n  },\n\n  addFiles: function (files, evt) {\n    var _files = []\n    var oldFileListLen = this.fileList.length\n    utils.each(files, function (file) {\n      // Uploading empty file IE10/IE11 hangs indefinitely\n      // Directories have size `0` and name `.`\n      // Ignore already added files if opts.allowDuplicateUploads is set to false\n      if ((!ie10plus || ie10plus && file.size > 0) && !(file.size % 4096 === 0 && (file.name === '.' || file.fileName === '.'))) {\n        var uniqueIdentifier = this.generateUniqueIdentifier(file)\n        if (this.opts.allowDuplicateUploads || !this.getFromUniqueIdentifier(uniqueIdentifier)) {\n          var _file = new File(this, file, this)\n          _file.uniqueIdentifier = uniqueIdentifier\n          if (this._trigger('fileAdded', _file, evt)) {\n            _files.push(_file)\n          } else {\n            File.prototype.removeFile.call(this, _file)\n          }\n        }\n      }\n    }, this)\n    // get new fileList\n    var newFileList = this.fileList.slice(oldFileListLen)\n    if (this._trigger('filesAdded', _files, newFileList, evt)) {\n      utils.each(_files, function (file) {\n        if (this.opts.singleFile && this.files.length > 0) {\n          this.removeFile(this.files[0])\n        }\n        this.files.push(file)\n      }, this)\n      this._trigger('filesSubmitted', _files, newFileList, evt)\n    } else {\n      utils.each(newFileList, function (file) {\n        File.prototype.removeFile.call(this, file)\n      }, this)\n    }\n  },\n\n  addFile: function (file, evt) {\n    this.addFiles([file], evt)\n  },\n\n  cancel: function () {\n    for (var i = this.fileList.length - 1; i >= 0; i--) {\n      this.fileList[i].cancel()\n    }\n  },\n\n  removeFile: function (file) {\n    File.prototype.removeFile.call(this, file)\n    this._trigger('fileRemoved', file)\n  },\n\n  generateUniqueIdentifier: function (file) {\n    var custom = this.opts.generateUniqueIdentifier\n    if (utils.isFunction(custom)) {\n      return custom(file)\n    }\n    /* istanbul ignore next */\n    // Some confusion in different versions of Firefox\n    var relativePath = file.relativePath || file.webkitRelativePath || file.fileName || file.name\n    /* istanbul ignore next */\n    return file.size + '-' + relativePath.replace(/[^0-9a-zA-Z_-]/img, '')\n  },\n\n  getFromUniqueIdentifier: function (uniqueIdentifier) {\n    var ret = false\n    utils.each(this.files, function (file) {\n      if (file.uniqueIdentifier === uniqueIdentifier) {\n        ret = file\n        return false\n      }\n    })\n    return ret\n  },\n\n  uploadNextChunk: function (preventEvents) {\n    var found = false\n    var pendingStatus = Chunk.STATUS.PENDING\n    var checkChunkUploaded = this.uploader.opts.checkChunkUploadedByResponse\n    if (this.opts.prioritizeFirstAndLastChunk) {\n      utils.each(this.files, function (file) {\n        if (file.paused) {\n          return\n        }\n        if (checkChunkUploaded && !file._firstResponse && file.isUploading()) {\n          // waiting for current file's first chunk response\n          return\n        }\n        if (file.chunks.length && file.chunks[0].status() === pendingStatus) {\n          file.chunks[0].send()\n          found = true\n          return false\n        }\n        if (file.chunks.length > 1 && file.chunks[file.chunks.length - 1].status() === pendingStatus) {\n          file.chunks[file.chunks.length - 1].send()\n          found = true\n          return false\n        }\n      })\n      if (found) {\n        return found\n      }\n    }\n\n    // Now, simply look for the next, best thing to upload\n    utils.each(this.files, function (file) {\n      if (!file.paused) {\n        if (checkChunkUploaded && !file._firstResponse && file.isUploading()) {\n          // waiting for current file's first chunk response\n          return\n        }\n        utils.each(file.chunks, function (chunk) {\n          if (chunk.status() === pendingStatus) {\n            chunk.send()\n            found = true\n            return false\n          }\n        })\n      }\n      if (found) {\n        return false\n      }\n    })\n    if (found) {\n      return true\n    }\n\n    // The are no more outstanding chunks to upload, check is everything is done\n    var outstanding = false\n    utils.each(this.files, function (file) {\n      if (!file.isComplete()) {\n        outstanding = true\n        return false\n      }\n    })\n    // should check files now\n    // if now files in list\n    // should not trigger complete event\n    if (!outstanding && !preventEvents && this.files.length) {\n      // All chunks have been uploaded, complete\n      this._triggerAsync('complete')\n    }\n    return outstanding\n  },\n\n  upload: function (preventEvents) {\n    // Make sure we don't start too many uploads at once\n    var ret = this._shouldUploadNext()\n    if (ret === false) {\n      return\n    }\n    !preventEvents && this._trigger('uploadStart')\n    var started = false\n    for (var num = 1; num <= this.opts.simultaneousUploads - ret; num++) {\n      started = this.uploadNextChunk(!preventEvents) || started\n      if (!started && preventEvents) {\n        // completed\n        break\n      }\n    }\n    if (!started && !preventEvents) {\n      this._triggerAsync('complete')\n    }\n  },\n\n  /**\n   * should upload next chunk\n   * @function\n   * @returns {Boolean|Number}\n   */\n  _shouldUploadNext: function () {\n    var num = 0\n    var should = true\n    var simultaneousUploads = this.opts.simultaneousUploads\n    var uploadingStatus = Chunk.STATUS.UPLOADING\n    utils.each(this.files, function (file) {\n      utils.each(file.chunks, function (chunk) {\n        if (chunk.status() === uploadingStatus) {\n          num++\n          if (num >= simultaneousUploads) {\n            should = false\n            return false\n          }\n        }\n      })\n      return should\n    })\n    // if should is true then return uploading chunks's length\n    return should && num\n  },\n\n  /**\n   * Assign a browse action to one or more DOM nodes.\n   * @function\n   * @param {Element|Array.<Element>} domNodes\n   * @param {boolean} isDirectory Pass in true to allow directories to\n   * @param {boolean} singleFile prevent multi file upload\n   * @param {Object} attributes set custom attributes:\n   *  http://www.w3.org/TR/html-markup/input.file.html#input.file-attributes\n   *  eg: accept: 'image/*'\n   * be selected (Chrome only).\n   */\n  assignBrowse: function (domNodes, isDirectory, singleFile, attributes) {\n    if (typeof domNodes.length === 'undefined') {\n      domNodes = [domNodes]\n    }\n\n    utils.each(domNodes, function (domNode) {\n      var input\n      if (domNode.tagName === 'INPUT' && domNode.type === 'file') {\n        input = domNode\n      } else {\n        input = document.createElement('input')\n        input.setAttribute('type', 'file')\n        // display:none - not working in opera 12\n        utils.extend(input.style, {\n          visibility: 'hidden',\n          position: 'absolute',\n          width: '1px',\n          height: '1px'\n        })\n        // for opera 12 browser, input must be assigned to a document\n        domNode.appendChild(input)\n        // https://developer.mozilla.org/en/using_files_from_web_applications)\n        // event listener is executed two times\n        // first one - original mouse click event\n        // second - input.click(), input is inside domNode\n        domNode.addEventListener('click', function (e) {\n          if (domNode.tagName.toLowerCase() === 'label') {\n            return\n          }\n          input.click()\n        }, false)\n      }\n      if (!this.opts.singleFile && !singleFile) {\n        input.setAttribute('multiple', 'multiple')\n      }\n      if (isDirectory) {\n        input.setAttribute('webkitdirectory', 'webkitdirectory')\n      }\n      attributes && utils.each(attributes, function (value, key) {\n        input.setAttribute(key, value)\n      })\n      // When new files are added, simply append them to the overall list\n      var that = this\n      input.addEventListener('change', function (e) {\n        that._trigger(e.type, e)\n        if (e.target.value) {\n          that.addFiles(e.target.files, e)\n          e.target.value = ''\n        }\n      }, false)\n    }, this)\n  },\n\n  onDrop: function (evt) {\n    this._trigger(evt.type, evt)\n    if (this.opts.onDropStopPropagation) {\n      evt.stopPropagation()\n    }\n    evt.preventDefault()\n    this._parseDataTransfer(evt.dataTransfer, evt)\n  },\n\n  _parseDataTransfer: function (dataTransfer, evt) {\n    if (dataTransfer.items && dataTransfer.items[0] &&\n      dataTransfer.items[0].webkitGetAsEntry) {\n      this.webkitReadDataTransfer(dataTransfer, evt)\n    } else {\n      this.addFiles(dataTransfer.files, evt)\n    }\n  },\n\n  webkitReadDataTransfer: function (dataTransfer, evt) {\n    var self = this\n    var queue = dataTransfer.items.length\n    var files = []\n    utils.each(dataTransfer.items, function (item) {\n      var entry = item.webkitGetAsEntry()\n      if (!entry) {\n        decrement()\n        return\n      }\n      if (entry.isFile) {\n        // due to a bug in Chrome's File System API impl - #149735\n        fileReadSuccess(item.getAsFile(), entry.fullPath)\n      } else {\n        readDirectory(entry.createReader())\n      }\n    })\n    function readDirectory (reader) {\n      reader.readEntries(function (entries) {\n        if (entries.length) {\n          queue += entries.length\n          utils.each(entries, function (entry) {\n            if (entry.isFile) {\n              var fullPath = entry.fullPath\n              entry.file(function (file) {\n                fileReadSuccess(file, fullPath)\n              }, readError)\n            } else if (entry.isDirectory) {\n              readDirectory(entry.createReader())\n            }\n          })\n          readDirectory(reader)\n        } else {\n          decrement()\n        }\n      }, readError)\n    }\n    function fileReadSuccess (file, fullPath) {\n      // relative path should not start with \"/\"\n      file.relativePath = fullPath.substring(1)\n      files.push(file)\n      decrement()\n    }\n    function readError (fileError) {\n      throw fileError\n    }\n    function decrement () {\n      if (--queue === 0) {\n        self.addFiles(files, evt)\n      }\n    }\n  },\n\n  _assignHelper: function (domNodes, handles, remove) {\n    if (typeof domNodes.length === 'undefined') {\n      domNodes = [domNodes]\n    }\n    var evtMethod = remove ? 'removeEventListener' : 'addEventListener'\n    utils.each(domNodes, function (domNode) {\n      utils.each(handles, function (handler, name) {\n        domNode[evtMethod](name, handler, false)\n      }, this)\n    }, this)\n  },\n\n  _preventEvent: function (e) {\n    utils.preventEvent(e)\n    this._trigger(e.type, e)\n  },\n\n  /**\n   * Assign one or more DOM nodes as a drop target.\n   * @function\n   * @param {Element|Array.<Element>} domNodes\n   */\n  assignDrop: function (domNodes) {\n    this._onDrop = utils.bind(this.onDrop, this)\n    this._assignHelper(domNodes, {\n      dragover: this.preventEvent,\n      dragenter: this.preventEvent,\n      dragleave: this.preventEvent,\n      drop: this._onDrop\n    })\n  },\n\n  /**\n   * Un-assign drop event from DOM nodes\n   * @function\n   * @param domNodes\n   */\n  unAssignDrop: function (domNodes) {\n    this._assignHelper(domNodes, {\n      dragover: this.preventEvent,\n      dragenter: this.preventEvent,\n      dragleave: this.preventEvent,\n      drop: this._onDrop\n    }, true)\n    this._onDrop = null\n  }\n})\n\nmodule.exports = Uploader\n\n},{\"./chunk\":1,\"./event\":2,\"./file\":4,\"./utils\":5}],4:[function(_dereq_,module,exports){\nvar utils = _dereq_('./utils')\nvar Chunk = _dereq_('./chunk')\n\nfunction File (uploader, file, parent) {\n  utils.defineNonEnumerable(this, 'uploader', uploader)\n  this.isRoot = this.isFolder = uploader === this\n  utils.defineNonEnumerable(this, 'parent', parent || null)\n  utils.defineNonEnumerable(this, 'files', [])\n  utils.defineNonEnumerable(this, 'fileList', [])\n  utils.defineNonEnumerable(this, 'chunks', [])\n  utils.defineNonEnumerable(this, '_errorFiles', [])\n  utils.defineNonEnumerable(this, 'file', null)\n  this.id = utils.uid()\n\n  if (this.isRoot || !file) {\n    this.file = null\n  } else {\n    if (utils.isString(file)) {\n      // folder\n      this.isFolder = true\n      this.file = null\n      this.path = file\n      if (this.parent.path) {\n        file = file.substr(this.parent.path.length)\n      }\n      this.name = file.charAt(file.length - 1) === '/' ? file.substr(0, file.length - 1) : file\n    } else {\n      this.file = file\n      this.fileType = this.file.type\n      this.name = file.fileName || file.name\n      this.size = file.size\n      this.relativePath = file.relativePath || file.webkitRelativePath || this.name\n      this._parseFile()\n    }\n  }\n\n  this.paused = uploader.opts.initialPaused\n  this.error = false\n  this.allError = false\n  this.aborted = false\n  this.completed = false\n  this.averageSpeed = 0\n  this.currentSpeed = 0\n  this._lastProgressCallback = Date.now()\n  this._prevUploadedSize = 0\n  this._prevProgress = 0\n\n  this.bootstrap()\n}\n\nutils.extend(File.prototype, {\n\n  _parseFile: function () {\n    var ppaths = parsePaths(this.relativePath)\n    if (ppaths.length) {\n      var filePaths = this.uploader.filePaths\n      utils.each(ppaths, function (path, i) {\n        var folderFile = filePaths[path]\n        if (!folderFile) {\n          folderFile = new File(this.uploader, path, this.parent)\n          filePaths[path] = folderFile\n          this._updateParentFileList(folderFile)\n        }\n        this.parent = folderFile\n        folderFile.files.push(this)\n        if (!ppaths[i + 1]) {\n          folderFile.fileList.push(this)\n        }\n      }, this)\n    } else {\n      this._updateParentFileList()\n    }\n  },\n\n  _updateParentFileList: function (file) {\n    if (!file) {\n      file = this\n    }\n    var p = this.parent\n    if (p) {\n      p.fileList.push(file)\n    }\n  },\n\n  _eachAccess: function (eachFn, fileFn) {\n    if (this.isFolder) {\n      utils.each(this.files, function (f, i) {\n        return eachFn.call(this, f, i)\n      }, this)\n      return\n    }\n    fileFn.call(this, this)\n  },\n\n  bootstrap: function () {\n    if (this.isFolder) return\n    var opts = this.uploader.opts\n    if (utils.isFunction(opts.initFileFn)) {\n      opts.initFileFn.call(this, this)\n    }\n\n    this.abort(true)\n    this._resetError()\n    // Rebuild stack of chunks from file\n    this._prevProgress = 0\n    var round = opts.forceChunkSize ? Math.ceil : Math.floor\n    var chunks = Math.max(round(this.size / opts.chunkSize), 1)\n    for (var offset = 0; offset < chunks; offset++) {\n      this.chunks.push(new Chunk(this.uploader, this, offset))\n    }\n  },\n\n  _measureSpeed: function () {\n    var smoothingFactor = this.uploader.opts.speedSmoothingFactor\n    var timeSpan = Date.now() - this._lastProgressCallback\n    if (!timeSpan) {\n      return\n    }\n    var uploaded = this.sizeUploaded()\n    // Prevent negative upload speed after file upload resume\n    this.currentSpeed = Math.max((uploaded - this._prevUploadedSize) / timeSpan * 1000, 0)\n    this.averageSpeed = smoothingFactor * this.currentSpeed + (1 - smoothingFactor) * this.averageSpeed\n    this._prevUploadedSize = uploaded\n    if (this.parent && this.parent._checkProgress()) {\n      this.parent._measureSpeed()\n    }\n  },\n\n  _checkProgress: function (file) {\n    return Date.now() - this._lastProgressCallback >= this.uploader.opts.progressCallbacksInterval\n  },\n\n  _chunkEvent: function (chunk, evt, message) {\n    var uploader = this.uploader\n    var STATUS = Chunk.STATUS\n    var that = this\n    var rootFile = this.getRoot()\n    var triggerProgress = function () {\n      that._measureSpeed()\n      uploader._trigger('fileProgress', rootFile, that, chunk)\n      that._lastProgressCallback = Date.now()\n    }\n    switch (evt) {\n      case STATUS.PROGRESS:\n        if (this._checkProgress()) {\n          triggerProgress()\n        }\n        break\n      case STATUS.ERROR:\n        this._error()\n        this.abort(true)\n        uploader._trigger('fileError', rootFile, this, message, chunk)\n        break\n      case STATUS.SUCCESS:\n        this._updateUploadedChunks(message, chunk)\n        if (this.error) {\n          return\n        }\n        clearTimeout(this._progeressId)\n        this._progeressId = 0\n        var timeDiff = Date.now() - this._lastProgressCallback\n        if (timeDiff < uploader.opts.progressCallbacksInterval) {\n          this._progeressId = setTimeout(triggerProgress, uploader.opts.progressCallbacksInterval - timeDiff)\n        }\n        if (this.isComplete()) {\n          clearTimeout(this._progeressId)\n          triggerProgress()\n          this.currentSpeed = 0\n          this.averageSpeed = 0\n          uploader._trigger('fileSuccess', rootFile, this, message, chunk)\n          if (rootFile.isComplete()) {\n            uploader._trigger('fileComplete', rootFile, this)\n          }\n        } else if (!this._progeressId) {\n          triggerProgress()\n        }\n        break\n      case STATUS.RETRY:\n        uploader._trigger('fileRetry', rootFile, this, chunk)\n        break\n    }\n  },\n\n  _updateUploadedChunks: function (message, chunk) {\n    var checkChunkUploaded = this.uploader.opts.checkChunkUploadedByResponse\n    if (checkChunkUploaded) {\n      var xhr = chunk.xhr\n      utils.each(this.chunks, function (_chunk) {\n        if (!_chunk.tested) {\n          var uploaded = checkChunkUploaded.call(this, _chunk, message)\n          if (_chunk === chunk && !uploaded) {\n            // fix the first chunk xhr status\n            // treated as success but checkChunkUploaded is false\n            // so the current chunk should be uploaded again\n            _chunk.xhr = null\n          }\n          if (uploaded) {\n            // first success and other chunks are uploaded\n            // then set xhr, so the uploaded chunks\n            // will be treated as success too\n            _chunk.xhr = xhr\n          }\n          _chunk.tested = true\n        }\n      }, this)\n      if (!this._firstResponse) {\n        this._firstResponse = true\n        this.uploader.upload(true)\n      } else {\n        this.uploader.uploadNextChunk()\n      }\n    } else {\n      this.uploader.uploadNextChunk()\n    }\n  },\n\n  _error: function () {\n    this.error = this.allError = true\n    var parent = this.parent\n    while (parent && parent !== this.uploader) {\n      parent._errorFiles.push(this)\n      parent.error = true\n      if (parent._errorFiles.length === parent.files.length) {\n        parent.allError = true\n      }\n      parent = parent.parent\n    }\n  },\n\n  _resetError: function () {\n    this.error = this.allError = false\n    var parent = this.parent\n    var index = -1\n    while (parent && parent !== this.uploader) {\n      index = parent._errorFiles.indexOf(this)\n      parent._errorFiles.splice(index, 1)\n      parent.allError = false\n      if (!parent._errorFiles.length) {\n        parent.error = false\n      }\n      parent = parent.parent\n    }\n  },\n\n  isComplete: function () {\n    if (!this.completed) {\n      var outstanding = false\n      this._eachAccess(function (file) {\n        if (!file.isComplete()) {\n          outstanding = true\n          return false\n        }\n      }, function () {\n        if (this.error) {\n          outstanding = true\n        } else {\n          var STATUS = Chunk.STATUS\n          utils.each(this.chunks, function (chunk) {\n            var status = chunk.status()\n            if (status === STATUS.ERROR || status === STATUS.PENDING || status === STATUS.UPLOADING || status === STATUS.READING || chunk.preprocessState === 1 || chunk.readState === 1) {\n              outstanding = true\n              return false\n            }\n          })\n        }\n      })\n      this.completed = !outstanding\n    }\n    return this.completed\n  },\n\n  isUploading: function () {\n    var uploading = false\n    this._eachAccess(function (file) {\n      if (file.isUploading()) {\n        uploading = true\n        return false\n      }\n    }, function () {\n      var uploadingStatus = Chunk.STATUS.UPLOADING\n      utils.each(this.chunks, function (chunk) {\n        if (chunk.status() === uploadingStatus) {\n          uploading = true\n          return false\n        }\n      })\n    })\n    return uploading\n  },\n\n  resume: function () {\n    this._eachAccess(function (f) {\n      f.resume()\n    }, function () {\n      this.paused = false\n      this.aborted = false\n      this.uploader.upload()\n    })\n    this.paused = false\n    this.aborted = false\n  },\n\n  pause: function () {\n    this._eachAccess(function (f) {\n      f.pause()\n    }, function () {\n      this.paused = true\n      this.abort()\n    })\n    this.paused = true\n  },\n\n  cancel: function () {\n    this.uploader.removeFile(this)\n  },\n\n  retry: function (file) {\n    var fileRetry = function (file) {\n      if (file.error) {\n        file.bootstrap()\n      }\n    }\n    if (file) {\n      file.bootstrap()\n    } else {\n      this._eachAccess(fileRetry, function () {\n        this.bootstrap()\n      })\n    }\n    this.uploader.upload()\n  },\n\n  abort: function (reset) {\n    if (this.aborted) {\n      return\n    }\n    this.currentSpeed = 0\n    this.averageSpeed = 0\n    this.aborted = !reset\n    var chunks = this.chunks\n    if (reset) {\n      this.chunks = []\n    }\n    var uploadingStatus = Chunk.STATUS.UPLOADING\n    utils.each(chunks, function (c) {\n      if (c.status() === uploadingStatus) {\n        c.abort()\n        this.uploader.uploadNextChunk()\n      }\n    }, this)\n  },\n\n  progress: function () {\n    var totalDone = 0\n    var totalSize = 0\n    var ret = 0\n    this._eachAccess(function (file, index) {\n      totalDone += file.progress() * file.size\n      totalSize += file.size\n      if (index === this.files.length - 1) {\n        ret = totalSize > 0 ? totalDone / totalSize : this.isComplete() ? 1 : 0\n      }\n    }, function () {\n      if (this.error) {\n        ret = 1\n        return\n      }\n      if (this.chunks.length === 1) {\n        this._prevProgress = Math.max(this._prevProgress, this.chunks[0].progress())\n        ret = this._prevProgress\n        return\n      }\n      // Sum up progress across everything\n      var bytesLoaded = 0\n      utils.each(this.chunks, function (c) {\n        // get chunk progress relative to entire file\n        bytesLoaded += c.progress() * (c.endByte - c.startByte)\n      })\n      var percent = bytesLoaded / this.size\n      // We don't want to lose percentages when an upload is paused\n      this._prevProgress = Math.max(this._prevProgress, percent > 0.9999 ? 1 : percent)\n      ret = this._prevProgress\n    })\n    return ret\n  },\n\n  getSize: function () {\n    var size = 0\n    this._eachAccess(function (file) {\n      size += file.size\n    }, function () {\n      size += this.size\n    })\n    return size\n  },\n\n  getFormatSize: function () {\n    var size = this.getSize()\n    return utils.formatSize(size)\n  },\n\n  getRoot: function () {\n    if (this.isRoot) {\n      return this\n    }\n    var parent = this.parent\n    while (parent) {\n      if (parent.parent === this.uploader) {\n        // find it\n        return parent\n      }\n      parent = parent.parent\n    }\n    return this\n  },\n\n  sizeUploaded: function () {\n    var size = 0\n    this._eachAccess(function (file) {\n      size += file.sizeUploaded()\n    }, function () {\n      utils.each(this.chunks, function (chunk) {\n        size += chunk.sizeUploaded()\n      })\n    })\n    return size\n  },\n\n  timeRemaining: function () {\n    var ret = 0\n    var sizeDelta = 0\n    var averageSpeed = 0\n    this._eachAccess(function (file, i) {\n      if (!file.paused && !file.error) {\n        sizeDelta += file.size - file.sizeUploaded()\n        averageSpeed += file.averageSpeed\n      }\n      if (i === this.files.length - 1) {\n        ret = calRet(sizeDelta, averageSpeed)\n      }\n    }, function () {\n      if (this.paused || this.error) {\n        ret = 0\n        return\n      }\n      var delta = this.size - this.sizeUploaded()\n      ret = calRet(delta, this.averageSpeed)\n    })\n    return ret\n    function calRet (delta, averageSpeed) {\n      if (delta && !averageSpeed) {\n        return Number.POSITIVE_INFINITY\n      }\n      if (!delta && !averageSpeed) {\n        return 0\n      }\n      return Math.floor(delta / averageSpeed)\n    }\n  },\n\n  removeFile: function (file) {\n    if (file.isFolder) {\n      while (file.files.length) {\n        var f = file.files[file.files.length - 1]\n        this._removeFile(f)\n      }\n    }\n    this._removeFile(file)\n  },\n\n  _delFilePath: function (file) {\n    if (file.path && this.filePaths) {\n      delete this.filePaths[file.path]\n    }\n    utils.each(file.fileList, function (file) {\n      this._delFilePath(file)\n    }, this)\n  },\n\n  _removeFile: function (file) {\n    if (!file.isFolder) {\n      utils.each(this.files, function (f, i) {\n        if (f === file) {\n          this.files.splice(i, 1)\n          return false\n        }\n      }, this)\n      file.abort()\n      var parent = file.parent\n      var newParent\n      while (parent && parent !== this) {\n        newParent = parent.parent\n        parent._removeFile(file)\n        parent = newParent\n      }\n    }\n    file.parent === this && utils.each(this.fileList, function (f, i) {\n      if (f === file) {\n        this.fileList.splice(i, 1)\n        return false\n      }\n    }, this)\n    if (!this.isRoot && this.isFolder && !this.files.length) {\n      this.parent._removeFile(this)\n      this.uploader._delFilePath(this)\n    }\n    file.parent = null\n  },\n\n  getType: function () {\n    if (this.isFolder) {\n      return 'folder'\n    }\n    return this.file.type && this.file.type.split('/')[1]\n  },\n\n  getExtension: function () {\n    if (this.isFolder) {\n      return ''\n    }\n    return this.name.substr((~-this.name.lastIndexOf('.') >>> 0) + 2).toLowerCase()\n  }\n\n})\n\nmodule.exports = File\n\nfunction parsePaths (path) {\n  var ret = []\n  var paths = path.split('/')\n  var len = paths.length\n  var i = 1\n  paths.splice(len - 1, 1)\n  len--\n  if (paths.length) {\n    while (i <= len) {\n      ret.push(paths.slice(0, i++).join('/') + '/')\n    }\n  }\n  return ret\n}\n\n},{\"./chunk\":1,\"./utils\":5}],5:[function(_dereq_,module,exports){\nvar oproto = Object.prototype\nvar aproto = Array.prototype\nvar serialize = oproto.toString\n\nvar isFunction = function (fn) {\n  return serialize.call(fn) === '[object Function]'\n}\n\nvar isArray = Array.isArray || /* istanbul ignore next */ function (ary) {\n  return serialize.call(ary) === '[object Array]'\n}\n\nvar isPlainObject = function (obj) {\n  return serialize.call(obj) === '[object Object]' && Object.getPrototypeOf(obj) === oproto\n}\n\nvar i = 0\nvar utils = {\n  uid: function () {\n    return ++i\n  },\n  noop: function () {},\n  bind: function (fn, context) {\n    return function () {\n      return fn.apply(context, arguments)\n    }\n  },\n  preventEvent: function (evt) {\n    evt.preventDefault()\n  },\n  stop: function (evt) {\n    evt.preventDefault()\n    evt.stopPropagation()\n  },\n  nextTick: function (fn, context) {\n    setTimeout(utils.bind(fn, context), 0)\n  },\n  toArray: function (ary, start, end) {\n    if (start === undefined) start = 0\n    if (end === undefined) end = ary.length\n    return aproto.slice.call(ary, start, end)\n  },\n\n  isPlainObject: isPlainObject,\n  isFunction: isFunction,\n  isArray: isArray,\n  isObject: function (obj) {\n    return Object(obj) === obj\n  },\n  isString: function (s) {\n    return typeof s === 'string'\n  },\n  isUndefined: function (a) {\n    return typeof a === 'undefined'\n  },\n  isDefined: function (a) {\n    return typeof a !== 'undefined'\n  },\n\n  each: function (ary, func, context) {\n    if (utils.isDefined(ary.length)) {\n      for (var i = 0, len = ary.length; i < len; i++) {\n        if (func.call(context, ary[i], i, ary) === false) {\n          break\n        }\n      }\n    } else {\n      for (var k in ary) {\n        if (func.call(context, ary[k], k, ary) === false) {\n          break\n        }\n      }\n    }\n  },\n\n  /**\n   * If option is a function, evaluate it with given params\n   * @param {*} data\n   * @param {...} args arguments of a callback\n   * @returns {*}\n   */\n  evalOpts: function (data, args) {\n    if (utils.isFunction(data)) {\n      // `arguments` is an object, not array, in FF, so:\n      args = utils.toArray(arguments)\n      data = data.apply(null, args.slice(1))\n    }\n    return data\n  },\n\n  extend: function () {\n    var options\n    var name\n    var src\n    var copy\n    var copyIsArray\n    var clone\n    var target = arguments[0] || {}\n    var i = 1\n    var length = arguments.length\n    var force = false\n\n    // \u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E3A\u5E03\u5C14,\u5224\u5B9A\u662F\u5426\u6DF1\u62F7\u8D1D\n    if (typeof target === 'boolean') {\n      force = target\n      target = arguments[1] || {}\n      i++\n    }\n\n    // \u786E\u4FDD\u63A5\u53D7\u65B9\u4E3A\u4E00\u4E2A\u590D\u6742\u7684\u6570\u636E\u7C7B\u578B\n    if (typeof target !== 'object' && !isFunction(target)) {\n      target = {}\n    }\n\n    // \u5982\u679C\u53EA\u6709\u4E00\u4E2A\u53C2\u6570\uFF0C\u90A3\u4E48\u65B0\u6210\u5458\u6DFB\u52A0\u4E8E extend \u6240\u5728\u7684\u5BF9\u8C61\u4E0A\n    if (i === length) {\n      target = this\n      i--\n    }\n\n    for (; i < length; i++) {\n      // \u53EA\u5904\u7406\u975E\u7A7A\u53C2\u6570\n      if ((options = arguments[i]) != null) {\n        for (name in options) {\n          src = target[name]\n          copy = options[name]\n\n          // \u9632\u6B62\u73AF\u5F15\u7528\n          if (target === copy) {\n            continue\n          }\n          if (force && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n            if (copyIsArray) {\n              copyIsArray = false\n              clone = src && isArray(src) ? src : []\n            } else {\n              clone = src && isPlainObject(src) ? src : {}\n            }\n            target[name] = utils.extend(force, clone, copy)\n          } else if (copy !== undefined) {\n            target[name] = copy\n          }\n        }\n      }\n    }\n    return target\n  },\n\n  formatSize: function (size) {\n    if (size < 1024) {\n      return size.toFixed(0) + ' bytes'\n    } else if (size < 1024 * 1024) {\n      return (size / 1024.0).toFixed(0) + ' KB'\n    } else if (size < 1024 * 1024 * 1024) {\n      return (size / 1024.0 / 1024.0).toFixed(1) + ' MB'\n    } else {\n      return (size / 1024.0 / 1024.0 / 1024.0).toFixed(1) + ' GB'\n    }\n  },\n\n  defineNonEnumerable: function (target, key, value) {\n    Object.defineProperty(target, key, {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: value\n    })\n  }\n}\n\nmodule.exports = utils\n\n},{}]},{},[3])\n(3)\n});"],
  "mappings": "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",
  "names": ["define", "module", "exports", "o", "e", "n", "self", "file", "averageSpeed", "i"]
}
